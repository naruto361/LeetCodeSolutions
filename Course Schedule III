bool cmp(vector<int> &a,vector<int> &b)
{
    return a[1]<b[1];
}
class Solution {
public:
    int scheduleCourse(vector<vector<int>>& courses) {
        priority_queue<int> pq;
        sort(courses.begin(),courses.end(),cmp);
        int time=0;
        for(auto &x:courses)
        {
            if(x[0] + time <= x[1])
            {
                pq.push(x[0]);
                time += x[0];
            }
            else
            {
                if(!pq.empty() && pq.top()>x[0])
                {
                    time -= pq.top();
                    pq.pop();
                    time += x[0];
                    pq.push(x[0]);
                }
            }
        }
        return pq.size();
    }
};
