/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int maxDepth=0;
    TreeNode* ans =NULL;
    private:
    int solve(TreeNode* root,int h)
    {
        if(!root) return h;
        int l = solve(root->left,h+1);
        int r = solve(root->right,h+1);
        if(l==r)
        {
            maxDepth=max(maxDepth,l);
            if(l==maxDepth) ans=root;
        }
        return max(l,r);
    }
public:
    TreeNode* subtreeWithAllDeepest(TreeNode* root) {
        if(!root) return NULL;
        if(!root->left && !root->right) return root;
        solve(root,0);
        return ans;
    }
};
