class NumArray {
public:
    class Node{
        public:
        int start,end,sum;
        Node *left,*right;
        Node(int start,int end)
        {
            this->start=start;
            this->end=end;
            this->sum=0;
            this->left=NULL;
            this->right=NULL;
        }
    };
    Node* root=NULL;
    Node* buildTree(vector<int> &nums,int l,int r)
    {
        if(l>r) return NULL;
        Node* temp=new Node(l,r);
        if(l==r) 
        {
            temp->sum=nums[l];
            return temp;
        }
        int mid=l+(r-l)/2;
        temp->left=buildTree(nums,l,mid);
        temp->right=buildTree(nums,mid+1,r);
        temp->sum = temp->left->sum + temp->right->sum;
        return temp;
        
    }
    NumArray(vector<int>& nums) {
        root=buildTree(nums,0,nums.size()-1);
    }
    
    void updateHelper(Node* root,int index,int val)
    {
        if(root->start == root->end) root->sum=val;
        else
        {
            int mid=root->start + (root->end - root->start)/2;
            if(index<=mid) updateHelper(root->left,index,val);
            else updateHelper(root->right,index,val);
            root->sum = root->left->sum + root->right->sum;
        }
    }
    
    void update(int index, int val) {
        updateHelper(root,index,val);
    }
    
    int sumRangeHelper(Node* root,int l,int r)
    {
        if(root->start==l && root->end==r)
        return root->sum;
        int mid=root->start + (root->end - root->start)/2;
        if(r<=mid)
        {
            return sumRangeHelper(root->left,l,r);
        }
        else if(l>=mid+1)
        {
            return sumRangeHelper(root->right,l,r);
        }
        else
        {
            return sumRangeHelper(root->left,l,mid) + sumRangeHelper(root->right,mid+1,r);
        }
    }
    
    int sumRange(int left, int right) {
        return sumRangeHelper(root,left,right);
    }
};

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray* obj = new NumArray(nums);
 * obj->update(index,val);
 * int param_2 = obj->sumRange(left,right);
 */
