
class Solution {
public:
    vector<vector<int>> highestRankedKItems(vector<vector<int>>& grid, vector<int>& pricing, vector<int>& start, int k) {
        int m=grid.size() , n=grid[0].size();
        vector<int> dx={-1,0,1,0};
        vector<int> dy={0,1,0,-1};
        queue<pair<int,int>> q;
        vector<vector<int>> dist(m,vector<int> (n,-1));
        dist[start[0]][start[1]]=0;
        q.push({start[0],start[1]});
        vector<vector<int>> v;
        if(grid[start[0]][start[1]]>=pricing[0] && grid[start[0]][start[1]]<=pricing[1])
        {
            v.push_back({0,grid[start[0]][start[1]],start[0],start[1]});
        }
        while(!q.empty())
        {
            int x=q.front().first;
            int y=q.front().second;
            q.pop();
            //cout<<x<<" "<<y<<'\n';
            
            for(int j=0;j<4;j++)
            {
                int newx=x+dx[j];
                int newy=y+dy[j];
                if(newx>=0 && newy>=0 && newx<grid.size() && newy<grid[0].size() &&
                   grid[newx][newy]!=0 && dist[newx][newy]==-1)
                {
                    q.push({newx,newy});dist[newx][newy]=1+dist[x][y];
                    if(grid[newx][newy]>=pricing[0] && grid[newx][newy]<=pricing[1] )
                    {
                        v.push_back({ dist[newx][newy], grid[newx][newy] , newx ,newy});
                        grid[newx][newy]=0;
                    }
                
                }
            }
        }
        // for(int i=0;i<m;i++)
        // {
        //     for(int j=0;j<n;j++) cout<<dist[i][j]<<" ";
        //     cout<<'\n';
        // }
        sort(v.begin(),v.end());
        // for(auto &i:v)
        // {
        //     for(auto &j:i) cout<<j<<" ";
        //     cout<<'\n';
        // }
        vector<vector<int>> ans;
        k=min(k,(int)v.size());
        for(int i=0;i<k;i++)
        {
            ans.push_back({v[i][2],v[i][3]});
        }
        return ans;
        
    }
};
