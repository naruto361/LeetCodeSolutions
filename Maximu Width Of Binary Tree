/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        // level order traversal with index
        unsigned long long int ans=0;
        if(!root) return ans;
        queue<pair<TreeNode*,unsigned long long int>> q;
        q.push({root,1});
        while(!q.empty())
        {
            ans = max(ans,1 + q.back().second - q.front().second);
            int n=q.size();
            //vector<int> x;
            for(int i=0;i<n;i++)
            {
                TreeNode* k=q.front().first;
                unsigned long long int idx=q.front().second;
                //x.push_back(k->val);
                
                q.pop();
                if(k->left)
                {
                    q.push({k->left,2*idx});
                }
                if(k->right)
                {
                    q.push({k->right, 2*idx +1});
                }
            }
            
        }
        return ans;
    }
};
