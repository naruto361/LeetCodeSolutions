/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int dfs(TreeNode* root,int mini,int maxi)
    {
        if(!root)
        {
            return maxi-mini;
        }
        maxi=max(maxi,root->val);
        mini=min(mini,root->val);
        cout<<root->val <<" "<<mini<<" "<<maxi<<'\n';
        return max(dfs(root->left, mini, maxi) , dfs(root->right, mini, maxi));
    }
    int maxAncestorDiff(TreeNode* root) {
        if(!root) return 0;
        // root, min, max
        return dfs(root,root->val,root->val);
    }
};
