class Solution {
public:
    bool a1,a2;
    vector<vector<int>> v;
    vector<bool> vis;
    void dfs(int start,int end,int i)
    {
        vis[i] = true;
        if(i==start) a1=true;
        if(i==end) a2=true;
        for(auto &j:v[i])
        {
            if(!vis[j]) dfs(start,end,j);
        }
    }
    bool validPath(int n, vector<vector<int>>& edges, int start, int end) {
        v.resize(n);
        for(int i=0;i<edges.size();i++)
        {
            v[edges[i][0]].push_back(edges[i][1]);
            v[edges[i][1]].push_back(edges[i][0]);
        }
        vis.resize(n,false);
        for(int i=0;i<n;i++)
        {
            if(vis[i]==false)
            {
                a1=false;a2=false;
                dfs(start,end,i);
                if(a1 && a2) return 1;
            }
        }
        return 0;
    }
};
