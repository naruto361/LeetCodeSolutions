class WordDictionary {
public:
    struct Node{
      bool end=false;
        Node* arr[26];
    };
    Node* root ;
    WordDictionary() {
        root = new Node();
    }
    bool find(string word,Node* temp)
    {
        int j=0;
        for(char c:word)
        {
            if(c!='.')
            {
                if(temp->arr[c-'a']==NULL) return false;
                temp=temp->arr[c-'a'];
            }
            else
            {
                for(int i=0;i<26;i++)
                {
                    string x=word.substr(j+1,word.length()-j-1);
                    if(temp->arr[i] && find(x,temp->arr[i]) )
                       return true;
                }
                return false;
            }
            j++;
        }
        return temp->end;
    }
    void addWord(string word) {
        Node* t = root;
        for(char c:word)
        {
            if(!t->arr[c-'a']) t->arr[c-'a'] = new Node();
            t=t->arr[c-'a'];
        }
        t->end = true;
    }
    
    bool search(string word) {
        return find(word,root);
    }
};

/**
 * Your WordDictionary object will be instantiated and called as such:
 * WordDictionary* obj = new WordDictionary();
 * obj->addWord(word);
 * bool param_2 = obj->search(word);
 */
