class Solution {
public:
    vector<int> dx={0,0,1,-1};
    vector<int> dy={1,-1,0,0};
    void dfs(int i,int j,int m,int n,vector<vector<int>> &grid)
    {
        if(i<0 || j<0 || i>=m || j>=n || grid[i][j]!=1) return ;
        grid[i][j]=2;
        for(int k=0;k<4;k++)
        {
            dfs(i+dx[k],j+dy[k],m,n,grid);
        }
    }
    int numEnclaves(vector<vector<int>>& grid) {
            int m=grid.size() , n=grid[0].size();
        for(int i=0;i<m;i++)
        {
            if(grid[i][0]==1) dfs(i,0,m,n,grid);
            if(grid[i][n-1]==1) dfs(i,n-1,m,n,grid);
        }
        for(int i=0;i<n;i++)
        {
            if(grid[0][i]==1) dfs(0,i,m,n,grid);
            if(grid[m-1][i]==1) dfs(m-1,i,m,n,grid);
        }
        int ans=0;
        for(auto &i:grid)
        {
            for(int &j:i)
            {
                if(j==1) ans++;
            }
        }
        return ans;
    }
};
