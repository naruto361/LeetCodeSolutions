/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(!root) return 1;
        queue<TreeNode*> q;
        q.push(root);
        int maxi=-100001;
        int max_level=1;
        int level=0;
        while(!q.empty())
        {
            ++level;
            int n=q.size();
            int sum=0;
            while(n--)
            {
                TreeNode* k=q.front();
                q.pop();
                sum+=k->val;
                if(k->left) q.push(k->left);
                if(k->right) q.push(k->right);
            }
            if(sum>maxi) 
            {
                maxi=sum;max_level=level;
            }
        }
        return max_level;
    }
};
