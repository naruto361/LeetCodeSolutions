/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* prev=NULL;
    TreeNode* one=NULL;
    TreeNode* second=NULL;
    void recoverTree(TreeNode* root) {
        inorder(root);
        swap(one->val,second->val);
    }
    void inorder(TreeNode* curr)
    {
        if(!curr) return ;
        inorder(curr->left);
        if(prev != NULL && curr->val <= prev->val)
        {
            if(one==NULL) one=prev;
            second=curr;
        }
        prev=curr;
        inorder(curr->right);
    }
};
