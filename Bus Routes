class Solution {
public:
    int numBusesToDestination(vector<vector<int>>& routes, int source, int target) {
        map<int,vector<int>> mp;
        for(int i=0;i<routes.size();i++)
        {
            for(int &j:routes[i])
            {
                mp[j].push_back(i);
            }
        }
        set<int> seen;
        queue<pair<int,int>> q;
        seen.insert(source);
        q.push({source,0});// stop no. and total buses till now
        while(!q.empty())
        {
                int node=q.front().first , buses=q.front().second;
                q.pop();
                if(node==target) return buses;
                for(auto &routenum:mp[node])
                {
                    for(auto &stop:routes[routenum])
                    {
                        if(seen.find(stop)==seen.end())
                        {
                            seen.insert(stop);
                            if(stop==target) return 1+buses;
                            q.push({stop,buses+1});
                        }
                    }
                    routes[routenum].clear();
                }
        }
        return -1;
    }
};
