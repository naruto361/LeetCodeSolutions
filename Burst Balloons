class Solution {
public:
    int solve(vector<int> &arr,int i,int j,vector<vector<int>> &dp)
    {
        int n=arr.size();
        if(i>j) return 0;
        if(i==j)
        {
            int temp=arr[i];
            if(i-1>=0) temp*=arr[i-1];
            if(j+1<n) temp*=arr[j+1];
            return temp;
        }
        if(dp[i][j]!=-1) return dp[i][j];
        int ans=0;
        for(int k=i;k<=j;k++)
        {
            int temp=arr[k];
            if(i-1>=0) temp*=arr[i-1];
            if(j+1<n) temp*=arr[j+1];
            temp += solve(arr,i,k-1,dp) + solve(arr,k+1,j,dp);
            ans = max(ans,temp);
        }
        return dp[i][j]=ans;
        
    }
    int maxCoins(vector<int>& nums) {
        vector<vector<int>> dp(nums.size()+1,vector<int> (nums.size()+1,-1));
        vector<int> arr;
        arr.push_back(1);
        for(auto &i:nums) arr.push_back(i);
        arr.push_back(1);
        return solve(arr,1,arr.size()-2,dp); // i , j
    }
};
