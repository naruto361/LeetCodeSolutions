class Bitset {
public:
    string s;
    string flips;
    int len;
    int ones;
    Bitset(int size) {
        len=size;
        for(int i=0;i<size;i++) s+='0',flips+='1';
        ones=0;
    }
    
    void fix(int idx) {
        if(s[idx]=='0') ones++;
        if(flips[idx]=='1') flips[idx]='0';
        s[idx]='1';
    }
    
    void unfix(int idx) {
        if(s[idx]=='1') ones--;
        if(flips[idx]=='0') flips[idx]='1';
        s[idx]='0';
    }
    
    void flip() {
        ones=len-ones;
        swap(s,flips);
        // string t=s;
        // s=flips;
        // flips=t;
    }
    
    bool all() {
        return ones==len;
    }
    
    bool one() {
        return ones>0;
    }
    
    int count() {
        return ones;
    }
    
    string toString() {
        return s;
    }
};

/**
 * Your Bitset object will be instantiated and called as such:
 * Bitset* obj = new Bitset(size);
 * obj->fix(idx);
 * obj->unfix(idx);
 * obj->flip();
 * bool param_4 = obj->all();
 * bool param_5 = obj->one();
 * int param_6 = obj->count();
 * string param_7 = obj->toString();
 */
