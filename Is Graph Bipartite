class Solution {
public:
    bool dfs(vector<vector<int>>& graph,vector<bool> &vis,vector<int> &color,int idx,int c)
    {
        vis[idx]=true;
        color[idx]=c;
        c^=1;
        for(int &child:graph[idx])
        {
            if(!vis[child] && !dfs(graph,vis,color,child,c)) return false;
            else if(vis[child] && color[child]!=c) return false;
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<bool> vis(n,false);
        vector<int> color(n,-1);
        for(int i=0;i<n;i++)
        {
            if(!vis[i] && !dfs(graph,vis,color,i,0)) return false;
        }
        return true;
    }
};
