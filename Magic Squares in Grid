class Solution {
public:
    bool ok(vector<vector<int>> &grid,int i,int j)
    {
        vector<int> v(16,0);
        for(int x=0;x<3;x++)
        {
            for(int y=0;y<3;y++)
            {
                //cout<<i-2+x<<" "<<j-2+y<<'\n';
                v[grid[i-2+x][j-2+y]]++;
            }
        }
        for(int i=1;i<=9;i++)
        {
            if(v[i]!=1) return false;
        }
        int sum=grid[i][j] + grid[i-1][j-1]+grid[i-2][j-2];
        if(grid[i-2][j]+grid[i-1][j-1]+grid[i][j-2] !=sum) return false;
        
        if(grid[i-2][j-2]+grid[i-1][j-2]+grid[i][j-2] !=sum) return false;
        if(grid[i-2][j-1]+grid[i-1][j-1]+grid[i][j-1] !=sum) return false;
        if(grid[i-2][j]+grid[i-1][j]+grid[i][j] !=sum) return false;
        
        if(grid[i-2][j-2]+grid[i-2][j-1]+grid[i-2][j] !=sum) return false;
        if(grid[i-1][j-2]+grid[i-1][j-1]+grid[i-1][j] !=sum) return false;
        if(grid[i][j-2]+grid[i][j-1]+grid[i][j] !=sum) return false;
        return true;
    }
    int numMagicSquaresInside(vector<vector<int>>& grid) {
        int ans =0;
        int m=grid.size() , n=grid[0].size();
        for(int i=2;i<m;i++)
        {
            for(int j=2;j<n;j++)
            {
                if(ok(grid,i,j)) ans++;
            }
        }
        return ans;
    }
};
