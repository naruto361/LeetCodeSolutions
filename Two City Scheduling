bool sortbyfunc(vector<int> &a,vector<int> &b)
{
    return a[1]-a[0] < b[1]-b[0];
}
class Solution {
public:
    int twoCitySchedCost(vector<vector<int>>& costs) {
        sort(costs.begin(),costs.end(),sortbyfunc);
        //for(auto &i:costs) cout<<i[0]<<" "<<i[1]<<'\n';
        int ans=0;
        int n=costs.size();
        for(int i=0;i<n;i++)
        {
            if(i<n/2) ans += costs[i][1];
            else ans += costs[i][0];
        }
        return ans;
    }
};

/////////////////////////////////////////////////////////////////////////////

bool func(pair<int,pair<int,int>> &a, pair<int,pair<int,int>>&b)
{
    return a.first>b.first;
}
class Solution {
public:
    int twoCitySchedCost(vector<vector<int>>& costs) {
        vector<pair<int,pair<int,int>>> v;
        for(auto &i:costs)
        {
            v.push_back({i[1]-i[0],{i[0],i[1]}});
        }
        sort(v.begin(),v.end(),func);
        int ans=0;
        for(int i=0;i<costs.size();i++)
        {
            if(i<costs.size()/2)
            ans +=v[i].second.first;
            else ans += v[i].second.second;
        }
        return ans;
    }
};
