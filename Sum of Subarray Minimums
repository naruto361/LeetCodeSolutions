class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int mod=1e9+7;
        long long ans=0;
        int n=arr.size();
        stack<int> st;
        vector<int> nse(n,n);
        vector<int> pse(n,-1);
        for(int i=0;i<n;i++)
        {
            while(!st.empty() && arr[i]<arr[st.top()]) 
            {
                nse[st.top()]=i;
                st.pop();
            }
            if(!st.empty()) pse[i]=st.top();
            st.push(i);
        }
        for(int i=0;i<n;i++)
        {
                // nums[i] is smallest in the subarray
                long long k = ((nse[i]-i)%mod * (i-pse[i])%mod)%mod;
                k = (k%mod * arr[i]%mod)%mod;
                ans = (ans%mod + k%mod)%mod;
        }
        return ans;
    }
};
