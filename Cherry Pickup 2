// https://www.youtube.com/watch?v=Gu-kEf2FXn0
class Solution {
public:
    int dp[71][71][71];
    int solve(int row,int col1,int col2,vector<vector<int>> &grid)
    {
        if(row>=grid.size() || col1>=grid[0].size() ||
        col2>=grid[0].size() || col1<0 || col2<0) 
          return 0;
          
        if(dp[row][col1][col2] != -1) return dp[row][col1][col2];
        
        int ans=0;
        
        for(int i=-1;i<=1;i++)
        {
            for(int j=-1;j<=1;j++)
            {
                ans = max( ans, solve(row+1,col1+i,col2+j,grid));
            }
        }
        
        ans += grid[row][col1];
        if(col1 != col2) ans += grid[row][col2];
        
        return dp[row][col1][col2]=ans;
    }
    int cherryPickup(vector<vector<int>>& grid) {
    
        memset(dp,-1,sizeof(dp));
        int row=0, col1=0, col2=grid[0].size()-1;
        return solve(row,col1,col2,grid);
    }
};
