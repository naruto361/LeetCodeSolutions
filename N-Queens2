class Solution {
public:
    int ans;
    void solve(vector<string> &temp,int row,vector<bool> &cols,
               vector<bool> &ndiag,vector<bool> &rdiag,int n)
    {
        if(row==n)
        {
            ans++;return ;
        }
        for(int col=0;col<n;col++)
        {
            if(!cols[col] && !ndiag[row+col] && !rdiag[row-col+n-1])
            {
                temp[row][col]='Q';
                cols[col]=true;ndiag[row+col]=true;rdiag[row-col+n-1]=true;
                solve(temp,row+1,cols,ndiag,rdiag,n);
                temp[row][col]='.';
                cols[col]=false;ndiag[row+col]=false;rdiag[row-col+n-1]=false;
            }
        }
    }
    int totalNQueens(int n) {
        vector<string> temp;
        string k;
        for(int i=0;i<n;i++) k+='.';
        for(int i=0;i<n;i++) temp.push_back(k);
        vector<bool> cols(n,false);
        vector<bool> ndiag(2*n-1,false);
        vector<bool> rdiag(2*n-1,false);
        solve(temp,0,cols,ndiag,rdiag,n);
        return ans;
    }
};
